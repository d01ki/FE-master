[
  {
    "question_id": "問１",
    "question_text": "大規模言語モデルを用いた自然言語処理において，事前学習済みのモデルに対して\n行う，ファインチューニングに関する記述として，最も適切なものはどれか。",
    "choices": {
      "ア": "強化学習を行い，最適な結果が得られるようにする。",
      "イ": "事前学習と同じデータを繰り返し用いて学習を行い,モデルの精度を高めるようにする。",
      "ウ": "大量のテキストデータを用いて学習を行い，モデルの精度を高めるようにする。",
      "エ": "特定のデータを用いて追加で学習を行い，目的とするタスクに適用できるように調整する。"
    },
    "correct_answer": "エ",
    "explanation": "ファインチューニングは、事前学習したAIモデルに対し、少量の追加学習を行うことで、目的のタスクに適応できるようにする手法です。目的に応じたデータセットを用いてモデルのパラメータを調整し、新たな出力層の設定などを行って新たなAIモデルを作成します。事前学習済のモデルをベースとするため、ゼロから AIモデルを作成する場合と比較し、少ないデータと短い学習時間で必要とするAIモデルを作成することができます。",
    "genre": "アルゴリズムとプログラミング"
  },
  {
    "question_id": "問２",
    "question_text": "浮動小数点形式で表現された数値の演算結果における丸め誤差の説明はどれか。",
    "choices": {
      "ア": "演算結果がコンピュータの扱える最大値を超えることによって生じる誤差である。",
      "イ": "数表現のけた数に限度があるので，最下位けたより小さい部分について四捨五入などの処理を行うことによって生じる誤差である。",
      "ウ": "乗除算において，指数部が小さい方の数値の仮数部の下位部分が失われることによって生じる誤差である。",
      "エ": "絶対値がほぼ等しい数値の加減算において，上位の有効数字が失われることによって生じる誤差である。"
    },
    "correct_answer": "イ",
    "explanation": "丸め誤差は、数値を有限桁で表現する際に、有限桁未満の部分の切捨てや切上げを行うことにより生じる誤差です。コンピュータでは表現できる桁数に限りがあるため、正確な値をそのまま保持できない場合があります。例えば、1/3を小数で表すと0.33333... と無限に続きますが、有効桁数が3桁のコンピュータ上では0.333に丸められます。このように、本来の値と表現された値に差が生じるのが丸め誤差です。",
    "genre": "基礎理論"
  },
  {
    "question_id": "問３",
    "question_text": "ソフトウェア開発における要求定義の工程で実施される作業として，最も適切なものはどれか。",
    "choices": {
      "ア": "システムのアーキテクチャを設計する。",
      "イ": "システムが満たすべき機能や性能を明確にする。",
      "ウ": "プログラムのコーディングを行う。",
      "エ": "単体テストを実施する。"
    },
    "correct_answer": "イ",
    "explanation": "要求定義は、開発するシステムが満たすべき機能要件や非機能要件（性能、セキュリティなど）を明確にする工程です。この段階では、利用者のニーズを分析し、システムに求められる要求を具体的に定義します。アーキテクチャ設計は基本設計、コーディングは実装、単体テストはテスト工程で実施される作業です。",
    "genre": "システム開発"
  },
  {
    "question_id": "問４",
    "question_text": "データベースの正規化に関する記述として，最も適切なものはどれか。",
    "choices": {
      "ア": "データの冗長性を高めて，データの整合性を向上させる。",
      "イ": "データの冗長性を排除して，データの整合性を向上させる。",
      "ウ": "データの検索性能を向上させるために，インデックスを作成する。",
      "エ": "データのバックアップを取得して，可用性を向上させる。"
    },
    "correct_answer": "イ",
    "explanation": "データベースの正規化は、データの冗長性（重複）を排除し、データの整合性を保つための手法です。正規化により、同じデータが複数の場所に保存されることを避け、データの更新時に矛盾が生じるリスクを軽減できます。第1正規形、第2正規形、第3正規形などの段階的な正規化手法があります。",
    "genre": "データベース"
  },
  {
    "question_id": "問５",
    "question_text": "ネットワークのOSI参照モデルにおいて，データリンク層で実行される機能として，最も適切なものはどれか。",
    "choices": {
      "ア": "IPアドレスによるルーティング",
      "イ": "MACアドレスによるフレーム転送",
      "ウ": "HTTPプロトコルによるデータ転送",
      "エ": "ファイルの暗号化"
    },
    "correct_answer": "イ",
    "explanation": "OSI参照モデルのデータリンク層（第2層）は、同一ネットワーク内でのデータ転送を担当します。MACアドレスを使用してフレーム単位でのデータ転送を行います。IPアドレスによるルーティングはネットワーク層（第3層）、HTTPはアプリケーション層（第7層）、暗号化は主にプレゼンテーション層（第6層）の機能です。",
    "genre": "ネットワーク"
  }
]
